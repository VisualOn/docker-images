name: Renovate Docker Image CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
    paths:
      - docker/renovate/**
      - .github/workflows/**

    # Publish `v1.2.3` tags as releases.
    #tags:
    #  - v*

  # Run tests for any PRs.
  pull_request:
    paths:
      - docker/renovate/**
      - .github/workflows/**

env:
  PLATFORM: linux/amd64
  FILE: renovate
  IMAGE: visualon/renovate

jobs:
  test:
    name: Test image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - name: Build the Docker image
        run: |
          docker buildx build \
            --platform ${PLATFORM} \
            --output "type=docker" \
            --cache-from ${IMAGE}:cache \
            --tag ${IMAGE} \
            .
        working-directory: ./docker/${{ env.FILE }}

      - name: Test run
        run: |
          docker run --rm -t ${IMAGE} --version

      - name: Image history
        run: docker history ${IMAGE}

      - name: Image size
        run: docker image ls | grep ${IMAGE}

  push:
    name: Publish image
    runs-on: ubuntu-latest

    needs: test
    if: github.event_name == 'push' && github.ref == 'master'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: v0.3.1

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_KEY }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Build the Docker image
        run: |
          docker buildx build \
            --platform ${PLATFORM} \
            --output "type=docker" \
            --cache-from ${IMAGE}:cache \
            --cache-to ${IMAGE}:cache \
            --tag ${IMAGE} \
            .
        working-directory: ./docker/${{ env.FILE }}

      - name: Publish the Docker image
        run: |
          ./bin/push.sh
        shell: bash
