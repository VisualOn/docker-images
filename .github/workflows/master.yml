name: Release

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

env:
  OWNER: ${{ github.repository_owner }}

jobs:
  test:
    name: Release test
    runs-on: ubuntu-latest

    timeout-minutes: 30

    strategy:
      matrix:
        file: [builder, verdaccio, rancher-cli, node, gitlab-ce, gitlab-runner, kubectl, kustomize, proget]

    env:
      FILE: ${{ matrix.file }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: docker-config
        uses: renovatebot/internal-tools@v1.2.7
        with:
          command: docker-config

      - name: Build the Docker image
        run: docker buildx bake test

      - name: Test run
        run: docker-compose --file docker-compose.test.yml run sut
        working-directory: ./docker/${{ env.FILE }}

  push:
    name: Release push
    runs-on: ubuntu-latest

    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    timeout-minutes: 30

    strategy:
      matrix:
        file: [builder, verdaccio, rancher-cli, node, gitlab-ce, gitlab-runner, kubectl, kustomize, proget]

    env:
      FILE: ${{ matrix.file }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: docker-config
        uses: renovatebot/internal-tools@v1.2.7
        with:
          command: docker-config

      - name: Log into registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u viceice --password-stdin

      - name: Build the Docker image
        run: docker buildx bake build

      - name: Publish the Docker image
        run: |
          if [ -f push.sh ]; then
            chmod +x ./push.sh
            ./push.sh
          fi
        working-directory: ./docker/${{ env.FILE }}
