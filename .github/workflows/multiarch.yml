name: multiarch-builds

on:
  push:

env:
  OWNER: ${{ github.repository_owner }}

jobs:
  windows:
    runs-on: windows-${{ matrix.os }}

    timeout-minutes: 60

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        file: [builder, drone-cache]
        os: [2019]

    env:
      BASE: ${{ matrix.os }}
      FILE: ${{ matrix.file }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}
      TAG: windows-${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2.3.4

      # ignore not yet existing images
      - name: Fetch the Docker image
        run: docker pull ${{ env.IMAGE }}:${{ env.TAG }}
        continue-on-error: true

      - name: Build the Docker image
        run: docker build --progress plain -t ${{ env.IMAGE }}:${{ env.TAG }} --cache-from ${{ env.IMAGE }}:${{ env.TAG }} ./windows/${{ env.BASE }}/${{ env.FILE }}

      - name: Test run
        run: docker-compose --file docker-compose.test.yml run sut
        working-directory: ./windows/${{ env.BASE }}/${{ env.FILE }}
        env:
          IMAGE: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Log into registry
        if: github.ref == 'refs/heads/master'
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u viceice --password-stdin

      - name: Publish the Docker image
        if: github.ref == 'refs/heads/master'
        run: docker push ${{ env.IMAGE }}

      - name: Publish the Docker image tags
        if: github.ref == 'refs/heads/master'
        run: |
          if [ -f push.sh ]; then
            ./push.sh
          fi
        working-directory: ./windows/${{ env.BASE }}/${{ env.FILE }}

  linux:
    runs-on: ubuntu-latest

    timeout-minutes: 30

    strategy:
      matrix:
        file: [builder, drone-cache]

    env:
      FILE: ${{ matrix.file }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}
      TAG: linux

    steps:
      - uses: actions/checkout@v2.3.4

      - name: docker-config
        uses: renovatebot/internal-tools@v1.2.19
        with:
          command: docker-config

      - name: Build the Docker image
        run: docker buildx bake --progress plain test

      - name: Test run
        run: docker-compose --file docker-compose.test.yml run sut
        working-directory: ./linux/${{ env.FILE }}
        env:
          IMAGE: ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Log into registry
        if: github.ref == 'refs/heads/master'
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u viceice --password-stdin

      - name: Publish the Docker image
        if: github.ref == 'refs/heads/master'
        run: docker buildx bake build

      - name: Publish the Docker image tags
        if: github.ref == 'refs/heads/master'
        run: |
          if [ -f push.sh ]; then
            ./push.sh
          fi
        working-directory: ./linux/${{ env.FILE }}

  multi-arch:
    needs: [linux, windows]

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    timeout-minutes: 30

    strategy:
      matrix:
        file: [builder, drone-cache]

    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ matrix.file }}

    steps:
      - uses: actions/checkout@v2.3.4

      - name: docker-config
        uses: renovatebot/internal-tools@v1.2.19
        with:
          command: docker-config

      - name: Log into registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u viceice --password-stdin

      - name: Build the Docker multiarch manifest
        run: docker buildx imagetools create -t ${{ env.IMAGE }} ${{ env.IMAGE }}:linux ${{ env.IMAGE }}:windows-2019

      - name: Inspect the Docker multiarch manifest
        run: docker buildx imagetools inspect ${{ env.IMAGE }}
